<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>MarkDown常用語法</title>
    <url>/MarkDown%E5%B8%B8%E7%94%A8%E8%AA%9E%E6%B3%95/</url>
    <content><![CDATA[<h1 id="前言小廢話"><a href="#前言小廢話" class="headerlink" title="前言小廢話"></a>前言小廢話</h1><p>畢竟這個部落格是以 MarkDown 語法寫成的，那就必須要了解一些常用的才能寫出<del>炫炮(X</del>有用又清楚的文章啊！以下的筆記是我看了官方文件以及其他大大的文章整理而成的，有常見的、也有可能用不到的，但沒關係先寫下來再說 ∠( ᐛ 」∠)＿</p>
<h1 id="區塊元素"><a href="#區塊元素" class="headerlink" title="區塊元素"></a>區塊元素</h1><ul>
<li><h2 id="標題"><a href="#標題" class="headerlink" title="標題"></a>標題</h2><ul>
<li>語法：井字符號<code>#</code>加空格</li>
<li>說明：井字符號<code>#</code>數量對應 html tag 的 <code>h1 ~ h6</code></li>
<li>實例：<blockquote>
<h3 id="h3-標題示範"><a href="#h3-標題示範" class="headerlink" title="h3 標題示範"></a>h3 標題示範</h3><h4 id="h4-標題示範"><a href="#h4-標題示範" class="headerlink" title="h4 標題示範"></a>h4 標題示範</h4><h5 id="h5-標題示範"><a href="#h5-標題示範" class="headerlink" title="h5 標題示範"></a>h5 標題示範</h5></blockquote>
</li>
<li>程式碼：<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="section">### h3 標題示範</span></span><br><span class="line"><span class="section">#### h4 標題示範</span></span><br><span class="line"><span class="section">##### h5 標題示範</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<!--show-->

<ul>
<li><h2 id="引用、階層"><a href="#引用、階層" class="headerlink" title="引用、階層"></a>引用、階層</h2><ul>
<li>語法：大於符號<code>&gt;</code>加空格</li>
<li>說明：大於符號<code>&gt;</code>的數量越多，階層數量就越多</li>
<li>實例：<br>第一層<blockquote>
<p>第二層</p>
<blockquote>
<p>第三層</p>
<blockquote>
<p>第四層</p>
<blockquote>
<p>第五層</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</li>
<li>程式碼：<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">第一層</span><br><span class="line"><span class="quote">&gt; 第二層</span></span><br><span class="line"><span class="quote">&gt; &gt; 第三層</span></span><br><span class="line"><span class="quote">&gt; &gt; &gt; 第四層</span></span><br><span class="line"><span class="quote">&gt; &gt; &gt; &gt; 第五層</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h2 id="清單"><a href="#清單" class="headerlink" title="清單"></a>清單</h2><ol>
<li><h3 id="有數字序位的"><a href="#有數字序位的" class="headerlink" title="有數字序位的"></a>有數字序位的</h3></li>
</ol>
<ul>
<li>語法：數字<code>123</code>加點<code>.</code>加空格</li>
<li>說明：可以依照你想要的序位開始寫，不強迫以 1 作為開頭</li>
<li>實例：<blockquote>
<ol start="3">
<li>這是排第一個的第三點</li>
<li>這是排第二個的第四點</li>
<li>這是排第三個的第五點</li>
</ol>
</blockquote>
</li>
<li>程式碼：<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">3.</span> 這是排第一個的第三點</span><br><span class="line"><span class="bullet">4.</span> 這是排第二個的第四點</span><br><span class="line"><span class="bullet">5.</span> 這是排第三個的第五點</span><br></pre></td></tr></table></figure></li>
<li>補充：如果有需要寫出數字加點<code>.</code>的組合，但不想要他變成清單的話，可以在數字與點<code>.</code>之間加上反斜線<code>/</code></li>
</ul>
<ol start="2">
<li><h3 id="沒有數字序位的"><a href="#沒有數字序位的" class="headerlink" title="沒有數字序位的"></a>沒有數字序位的</h3></li>
</ol>
<ul>
<li>語法：減號<code>-</code>&#x2F;加號<code>+</code>&#x2F;米字號<code>*</code>加空格</li>
<li>說明：減號<code>-</code>、加號<code>+</code>、米字號<code>*</code>擇一都可以，不過我的 VScode 有裝自動排版（Auto Format）的插件，打加號或米字號它會自動幫我改成減號 XD</li>
<li>實例：<blockquote>
<ul>
<li>這是沒有數字的列點</li>
</ul>
</blockquote>
</li>
<li>程式碼：<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="bullet">-</span> 減號</span><br><span class="line"><span class="bullet">+</span> 加號</span><br><span class="line"><span class="bullet">*</span> 米字號</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h2 id="程式碼區塊"><a href="#程式碼區塊" class="headerlink" title="程式碼區塊"></a>程式碼區塊</h2><ul>
<li>語法：在程式碼的前後各用三個反引號<code>```</code>包住</li>
<li>說明：在第一個反引號旁，視情況可以選擇註明使用的語言（可以顯示該語言的 highlight）、該程式碼區塊的說明文字、網址、超連結顯示的文字，需依照此順序寫</li>
<li>實例：<blockquote>
<figure class="highlight css"><figcaption><span>說明文字會顯示在這邊</span><a href="https://iam-cj.github.io/">西噘的不專業筆記</a></figcaption><table><tr><td class="code"><pre><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line"><span class="attribute">background-color</span>:black;</span><br></pre></td></tr></table></figure></blockquote>
</li>
<li>程式碼：<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="code">```CSS 說明文字會顯示在這邊 https://iam-cj.github.io/ 西噘的不專業筆記</span></span><br><span class="line"><span class="code">color:red;</span></span><br><span class="line"><span class="code">background-color:black;</span></span><br><span class="line"><span class="code">```</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h2 id="分隔線"><a href="#分隔線" class="headerlink" title="分隔線"></a>分隔線</h2><ul>
<li>語法：三個減號<code>---</code>或三個米字號<code>***</code></li>
<li>說明：這次我打三個減號，我的 Auto Format 會把減號轉成米字號 XD</li>
<li>實例：<blockquote>
<p>下面這條就是分隔線</p>
<hr>
<p>上面這條就是分隔線</p>
</blockquote>
</li>
<li>程式碼：<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h1 id="行內元素"><a href="#行內元素" class="headerlink" title="行內元素"></a>行內元素</h1><ul>
<li><h2 id="各種文字效果"><a href="#各種文字效果" class="headerlink" title="各種文字效果"></a>各種文字效果</h2><ol>
<li><h3 id="斜體"><a href="#斜體" class="headerlink" title="斜體"></a>斜體</h3></li>
</ol>
<ul>
<li>語法：在文字前後加上米字號<code>*</code>或底線<code>_</code></li>
<li>實例：<blockquote>
<p><em>斜體文字</em></p>
</blockquote>
</li>
<li>程式碼：<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="emphasis">*斜體文字*</span></span><br><span class="line"><span class="emphasis">_斜體文字_</span></span><br></pre></td></tr></table></figure></li>
<li>補充：如果單純想要顯示<code>*</code>或<code>_</code>，在符號前後加空格即可</li>
</ul>
<ol start="2">
<li><h3 id="粗體、強調"><a href="#粗體、強調" class="headerlink" title="粗體、強調"></a>粗體、強調</h3></li>
</ol>
<ul>
<li>語法：在文字前後加上兩個米字號<code>**</code>或兩個底線<code>__</code></li>
<li>實例：<blockquote>
<p><strong>粗體文字</strong></p>
</blockquote>
</li>
<li>程式碼：<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="strong">**粗體文字**</span></span><br><span class="line"><span class="strong">__粗體文字__</span></span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="3">
<li><h3 id="刪除線"><a href="#刪除線" class="headerlink" title="刪除線"></a>刪除線</h3></li>
</ol>
<ul>
<li>語法：在文字前後加上兩個波浪號<code>~~</code></li>
<li>實例：<blockquote>
<p><del>被刪除了</del></p>
</blockquote>
</li>
<li>程式碼：<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">~~被刪除了~~</span><br></pre></td></tr></table></figure></li>
</ul>
<ol start="4">
<li><h3 id="文字顏色及大小"><a href="#文字顏色及大小" class="headerlink" title="文字顏色及大小"></a>文字顏色及大小</h3></li>
</ol>
<ul>
<li>語法：在文字前後用<code>&lt;font&gt;&lt;/font&gt;</code>包住，並在內部寫 style</li>
<li>實例：<blockquote>
<p><font style="color:green;font-size:15px;">這是一段大小為 15px 的綠色文字</font></p>
</blockquote>
</li>
<li>程式碼：<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">style</span>=<span class="string">&quot;color:green;font-size:15px;&quot;</span>&gt;</span></span>這是一段大小為15px的綠色文字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h2 id="行內程式碼"><a href="#行內程式碼" class="headerlink" title="行內程式碼"></a>行內程式碼</h2><ul>
<li>語法：在程式碼前後加上反引號<code>`</code></li>
<li>實例：<blockquote>
<p><code>&lt;hr/&gt;</code></p>
</blockquote>
</li>
<li>程式碼：<figure class="highlight md"><table><tr><td class="code"><pre><span class="line"><span class="code">`&lt;hr/&gt;`</span></span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><ul>
<li>語法：用這個符號<code>|</code>手動畫表格，在文字前後加冒號<code>:</code>可以更改文字對齊方向</li>
<li>說明：冒號<code>:</code>加在哪邊，就表示往哪個方向靠齊，都加的話表示置中。<br>另外小碎念個，我隨手搜尋一下沒有找到<code>|</code>中文的名稱，只找到英文叫做 vertical bar</li>
<li>實例：<blockquote>
<table>
<thead>
<tr>
<th align="left">日期</th>
<th align="center">時間</th>
<th align="right">事件</th>
</tr>
</thead>
<tbody><tr>
<td align="left">4&#x2F;25</td>
<td align="center">18:00</td>
<td align="right">吃晚餐</td>
</tr>
</tbody></table>
</blockquote>
</li>
<li>程式碼：<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">| 日期 | 時間  |   事件 |</span><br><span class="line">| :--- | :---: | -----: | //似乎需要有這段才會被網頁辨識成表格</span><br><span class="line">| 4/25 | 18:00 | 吃晚餐 |</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h2 id="超連結"><a href="#超連結" class="headerlink" title="超連結"></a>超連結</h2><ul>
<li>語法：<code>[想要顯示的文字](網址路徑)</code></li>
<li>說明：使用中括號<code>[]</code>將想要顯示的文字（例如網站名稱）包起來，後面用括號<code>()</code>將想要插入的連結放進去，中括號與括號間不要有空格</li>
<li>實例：<blockquote>
<p><a href="https://iam-cj.github.io/">西噘的不專業筆記</a></p>
</blockquote>
</li>
<li>程式碼：<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">[<span class="string">西噘的不專業筆記</span>](<span class="link">https://iam-cj.github.io/</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
<li><h2 id="插入圖片"><a href="#插入圖片" class="headerlink" title="插入圖片"></a>插入圖片</h2><ul>
<li>語法：<code>![圖片名稱](圖片路徑)</code></li>
<li>說明：跟超連結的語法相似，但不同的是最前方有驚嘆號<code>!</code>，中括號<code>[]</code>內放圖片名稱，後面括號<code>()</code>放入圖片連結，符號之間不要有空格</li>
<li>實例：<blockquote>
<p><img src="https://images.pexels.com/photos/546819/pexels-photo-546819.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1" alt="這是一張程式碼的圖片"><br>圖片來源為免費圖庫<a href="https://www.pexels.com/zh-tw/">Pexels</a></p>
</blockquote>
</li>
<li>程式碼：<figure class="highlight md"><table><tr><td class="code"><pre><span class="line">![<span class="string">這是一張程式碼的圖片</span>](<span class="link">https://images.pexels.com/photos/546819/pexels-photo-546819.jpeg?auto=compress&amp;cs=tinysrgb&amp;w=1260&amp;h=750&amp;dpr=1</span>)</span><br></pre></td></tr></table></figure></li>
</ul>
</li>
</ul>
<h1 id="參考資料"><a href="#參考資料" class="headerlink" title="參考資料"></a>參考資料</h1><ul>
<li><a href="https://markdown.tw/">Markdown 文件</a></li>
<li><a href="https://www.casper.tw/development/2019/11/23/ten-mins-learn-markdown/">十分鐘快速掌握 Markdown</a></li>
<li><a href="https://jimmywei01.github.io/2019/05/09/MarkDown%E3%80%81Hexo%E3%80%81NexT-%E5%B8%B8%E7%94%A8%E5%AF%AB%E6%B3%95/">MarkDown、Hexo、NexT 常用寫法</a></li>
</ul>
]]></content>
      <categories>
        <category>MarkDown</category>
      </categories>
      <tags>
        <tag>MarkDown</tag>
      </tags>
  </entry>
  <entry>
    <title>【作品集】就。很。Pro | Procreate 中文筆刷資源網</title>
    <url>/%E3%80%90%E4%BD%9C%E5%93%81%E9%9B%86%E3%80%91%E5%B0%B1%E3%80%82%E5%BE%88%E3%80%82Pro%20Procreate%20%E4%B8%AD%E6%96%87%E7%AD%86%E5%88%B7%E8%B3%87%E6%BA%90%E7%B6%B2/</url>
    <content><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>一個以 Procreate（ios 系統知名付費繪圖軟體）筆刷為主要商品的模擬電商網站。<br>如需參照原始碼（Vue 框架），可以移至 <a href="https://github.com/iam-CJ/SideProject_1_Vue-structure">我的 GitHub</a> 瀏覽。</p>
<h1 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h1><blockquote>
<p><a href="https://iam-cj.github.io/SideProject_1/">就。很。Pro | Procreate 中文筆刷資源網</a></p>
</blockquote>
<img alt="homepage-preview" width="500" height="500" src="https://raw.githubusercontent.com/iam-CJ/SideProject_1/e4dfbe7a3cfbbb54df5bd4d9b15cd87d7f762656/%E9%A6%96%E9%A0%81%E9%A0%90%E8%A6%BD%E5%9C%96.png"/>

<h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><ul>
<li><strong>具備 RWD：</strong>隨螢幕尺寸變化，網頁排版及大小也會隨著變化，目前主要以螢幕寬為 390px(像素)、768px、1440px 是最適合瀏覽之尺寸。</li>
<li><strong>收藏商品：</strong>可於各類商品頁對喜愛的商品點擊【♡】愛心圖示將其加入收藏，並且可以在螢幕右上角的【我的收藏】（使用手機者則是【🖤】愛心圖示）內瀏覽或移除收藏項目。</li>
<li><strong>會員登入：</strong>第一次從首頁要跳轉至其他頁時，會需要登入（帳號密碼皆為 123），但此功能尚不完善，登入後不會有變化也無法登出。</li>
</ul>
<h1 id="製作動機"><a href="#製作動機" class="headerlink" title="製作動機"></a>製作動機</h1><ol>
<li><p><strong>目前無繁體中文平台、網路上的資源分散：</strong><br>本身作為此繪畫 app 使用者，在尋找筆刷及紙質參考的資源時會感到有些麻煩，因為沒有繁中的平台集結，多是英文、簡體中文的平台；另外也有很多都是分享在個人的部落格，資源到處分散，會覺得看到眼花撩亂。</p>
</li>
<li><p><strong>對於其他網站的疑慮：</strong><br>有很多時候用中文會找不到想要的筆刷，需要改成打英文關鍵字才能找到，但找到後又會擔心是詐騙網站，下載後電腦或平板可能會中毒或洩漏個資。</p>
</li>
</ol>
<h1 id="使用技術"><a href="#使用技術" class="headerlink" title="使用技術"></a>使用技術</h1><ul>
<li><strong>HTML、CSS、JavaScript：</strong>最初我僅使用最基本的三大語言將網站架構起來，並且多數樣式是自己手刻的，直到需要寫的 CSS 樣式以及網站結構規模變大、變複雜時，才加入 SCSS 及 Vue 框架等工具。</li>
<li><strong>CSS 預處理器－SCSS：</strong>選擇使用 SCSS 的原因是，它提供了巢狀結構的寫法，並且可以透過變數來統一管理高重複性的樣式。對我而言，這樣做可以方便的查找和調整樣式，並且快速套用固定元素的樣式，大大減少了上下翻找確認樣式的時間。</li>
<li><strong>Vue 框架－Vue Cli、Vue Router：</strong>加入 Vue 框架是因為我想要新增收藏商品以及會員登入功能。選擇 Vue 框架是因為它在處理資料與畫面很直覺易懂；此外，以各商品類別頁為例，透過 router 控制傳遞的參數，我可以輕鬆的改變網頁內容（改變顯示的商品類別），不用像之前只使用三大語言，每一個商品類別都需要建立一個頁面。</li>
</ul>
<h1 id="未來待新增的功能"><a href="#未來待新增的功能" class="headerlink" title="未來待新增的功能"></a>未來待新增的功能</h1><ul>
<li>會員登入後，增加可見資訊（如放入購物車的商品、及會員資料等）</li>
<li>購物車功能，可計算所有放入購物車商品的累計金額</li>
<li>搜尋功能，輸入關鍵字後列出符合的商品清單，並且可以透過點擊跳轉至該商品介紹頁</li>
</ul>
]]></content>
      <categories>
        <category>作品集</category>
      </categories>
      <tags>
        <tag>作品集</tag>
      </tags>
  </entry>
  <entry>
    <title>【作品集】新竹市違規照相桿地圖</title>
    <url>/%E3%80%90%E4%BD%9C%E5%93%81%E9%9B%86%E3%80%91%E6%96%B0%E7%AB%B9%E5%B8%82%E9%81%95%E8%A6%8F%E7%85%A7%E7%9B%B8%E6%A1%BF%E5%9C%B0%E5%9C%96/</url>
    <content><![CDATA[<h1 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h1><p>可以查詢新竹市內設有違規自動照相固定桿之位置，照相桿類型包含移動式照相桿、測速、違規停車、科技執法等，資料來自新竹市政府開放資料平台之最新資料(111.12.28)。<br>如需參照原始碼，可以移至 <a href="https://github.com/iam-CJ/SideProject_2">我的 GitHub</a> 瀏覽。</p>
<h1 id="DEMO"><a href="#DEMO" class="headerlink" title="DEMO"></a>DEMO</h1><blockquote>
<p><a href="https://iam-cj.github.io/SideProject_2/">新竹市違規自動照相桿地圖</a></p>
</blockquote>
<img alt="homepage-preview" width="700" height="300" src="https://raw.githubusercontent.com/iam-CJ/SideProject_2/7592c597d98e62bb7eb5fe4e27b3884243fc9d1a/%E9%A0%90%E8%A6%BD%E5%9C%96.png"/>

<h1 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h1><ul>
<li><strong>具備 RWD：</strong>隨螢幕尺寸變化，網頁排版及大小也會隨著變化。</li>
<li><strong>可選取地區、街道以縮小搜尋範圍：</strong>可以透過網頁上方選單選取想要查看的路段，精簡顯示的結果讓使用者能一目了然。</li>
<li><strong>科技執法照相桿篩選按鈕：</strong>因應近幾年各地增設科技執法照相桿，切換按鈕可快速得知科技執法照相桿之設置地點。</li>
<li><strong>顯示搜尋結果筆數：</strong>避免結果出現在當前所看到的地圖範圍以外而難以察覺，提供結果數來提醒使用者可以移動地圖去做查閱。</li>
<li><strong>點擊座標可瀏覽更詳細資訊：</strong>查詢結果會以座標圖示出現在地圖上，如果想要了解該照相桿之速限及類型，可以點擊座標圖示進一步查看。</li>
</ul>
<h1 id="製作動機"><a href="#製作動機" class="headerlink" title="製作動機"></a>製作動機</h1><ol>
<li><strong>練習接外部資料並處理：</strong><br>由於上一份作品之資料來源都存於本機，因此這次想要嘗試運用外部資料來製作作品，並且練習觀察資料結構、發想能如何運用。</li>
<li><strong>近期增設許多科技執法照相桿：</strong><br>近幾年各地開始增設科技執法照相桿，若平時沒有看新聞或追蹤相關資訊的習慣，容易錯過消息；另外對於不熟當地或是對路名不敏感的人，即便得知在哪個路口，沒有看到地圖可能還是不夠清楚。</li>
</ol>
<h1 id="使用技術"><a href="#使用技術" class="headerlink" title="使用技術"></a>使用技術</h1><ul>
<li><strong>Bootstrap：</strong>利用其預設的 CSS 樣式，快速建立整齊、美觀的介面。</li>
<li><strong>OpenStreetMap、Leaflet：</strong>地圖的顯示是使用免費開源圖資－OpenStreetMap，而設定地圖縮放大小、預設顯示位置以及設立座標等功能，則是使用 Leaflet 這個開源的 JavaScript library 來製作。</li>
<li><strong>Vue 框架－Vue Cli：</strong>運用 Vue 其雙向綁定的特性，資料畫面會同步更新，在處理上更省事。</li>
<li><strong>Axios、Vue-Axios：</strong>使用 Axios 來引入及讀取來自外部的 Json 檔。</li>
</ul>
]]></content>
      <categories>
        <category>作品集</category>
      </categories>
      <tags>
        <tag>作品集</tag>
      </tags>
  </entry>
  <entry>
    <title>【用嬰兒都學得會的教材學JS】學習筆記－系列（一）</title>
    <url>/%E3%80%90%E7%94%A8%E5%AC%B0%E5%85%92%E9%83%BD%E5%AD%B8%E5%BE%97%E6%9C%83%E7%9A%84%E6%95%99%E6%9D%90%E5%AD%B8JS%E3%80%91%E5%AD%B8%E7%BF%92%E7%AD%86%E8%A8%98%EF%BC%8D%E7%B3%BB%E5%88%97%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h1 id="前言小廢話"><a href="#前言小廢話" class="headerlink" title="前言小廢話"></a>前言小廢話</h1><p>其實我在上完職訓課程之後一直有個困擾，除了沒學到框架以外，就是我 JS 的程度停留在能夠基礎操作，好像都會但深入問就被問倒，也抓不太清楚自己還不會的範圍。<br>然而，我在苦惱之際突然靈光一閃，想到在臉書社團看過阿川大大在宣傳自己的課程，點開介紹後了解課程設計是以寫小專案的方式學 JS，而我喜歡邊做邊學，印象更深刻也比較有趣，就這樣開啟了學習的旅程 ∠( ᐛ 」∠)＿<br><font style="font-size:15px;color:grey;">p.s.本系列標題是來自站長阿川大大將這份教材取名為自學網頁の嬰兒教材</font></p>
<h1 id="課程開始"><a href="#課程開始" class="headerlink" title="課程開始"></a>課程開始</h1><h2 id="第一課－基本的函數操作、onclick-事件"><a href="#第一課－基本的函數操作、onclick-事件" class="headerlink" title="第一課－基本的函數操作、onclick 事件"></a>第一課－基本的函數操作、onclick 事件</h2><ul>
<li>課程概要：介紹 onclick<blockquote>
<p>作業說明：在 html tag 中，加入 onclick 事件，寫出一個點擊按鈕後跳出 alert 的功能<br><a href="https://jsfiddle.net/iamCJ/135yh0pv/">https://jsfiddle.net/iamCJ/135yh0pv/</a></p>
</blockquote>
</li>
</ul>
<h2 id="第二課－基本的變數操作、從-html-取得內容"><a href="#第二課－基本的變數操作、從-html-取得內容" class="headerlink" title="第二課－基本的變數操作、從 html 取得內容"></a>第二課－基本的變數操作、從 html 取得內容</h2><ul>
<li>課程概要：教導如何使用<code>getElementById</code>抓取 html 的內容</li>
<li>作業心得：最近都在寫 Vue，忘記宣告變數要放在 function 裡面，才會重新抓 input 裡的值<blockquote>
<p>作業說明：透過<code>getElementById().value</code>抓取 input 內容，用變數存取並使用<br><a href="https://jsfiddle.net/iamCJ/ewy6bak2/">https://jsfiddle.net/iamCJ/ewy6bak2/</a></p>
</blockquote>
</li>
</ul>
<h2 id="第三課－修改-html-的內容"><a href="#第三課－修改-html-的內容" class="headerlink" title="第三課－修改 html 的內容"></a>第三課－修改 html 的內容</h2><ul>
<li>課程概要：用選取器選取元素後，可以使用<code>.textContent</code>在 tag 裡新增內容</li>
<li>自己補充：這個方式會直接覆蓋 tag 原有的內容<blockquote>
<p>作業說明：使用<code>.textContent</code>讓某個區塊的內容可以隨著 input 裡的值做更動<br><a href="https://jsfiddle.net/iamCJ/bm6xovej/">https://jsfiddle.net/iamCJ/bm6xovej/</a></p>
</blockquote>
</li>
</ul>
<h2 id="第四課－基本的陣列操作"><a href="#第四課－基本的陣列操作" class="headerlink" title="第四課－基本的陣列操作"></a>第四課－基本的陣列操作</h2><ul>
<li>課程概要：<ol>
<li>陣列的長相<code>[]</code>、索引的使用<code>array[index]</code></li>
<li>選單元素會有以下屬性可以使用：<ol>
<li><code>.selectedIndex</code>：可以讓我們取得<strong>被選取到</strong>的選項索引</li>
<li><code>.options</code>：會以陣列型態列出所有<code>&lt;option&gt;</code>，而單一個<code>&lt;option&gt;</code>又會是物件型態<figure class="highlight js"><table><tr><td class="code"><pre><span class="line">options = [&#123; option1 &#125;, &#123; option2 &#125;, &#123; option3 &#125;];</span><br></pre></td></tr></table></figure></li>
<li><code>.value</code>、<code>.text</code>：單一個<code>&lt;option&gt;</code>可以透過這兩個屬性來進一步取得他的 value 以及打在選項上的字</li>
</ol>
</li>
</ol>
</li>
<li>作業心得：對我來說，把樣式弄漂亮比較麻煩 XD，所以我想先以寫好功能為重點<blockquote>
<p>作業說明：透過<code>.selectedIndex</code>及<code>option.text</code>的屬性，將使用者選擇的選項顯示在下面的表單中<br><a href="https://jsfiddle.net/iamCJ/cdw6k4us/">https://jsfiddle.net/iamCJ/cdw6k4us/</a></p>
</blockquote>
</li>
</ul>
<h2 id="第五課－基本的-if-x2F-else-條件流程控制"><a href="#第五課－基本的-if-x2F-else-條件流程控制" class="headerlink" title="第五課－基本的 if&#x2F;else 條件流程控制"></a>第五課－基本的 if&#x2F;else 條件流程控制</h2><ul>
<li>課程概要：<ol>
<li>介紹流程控制 if&#x2F;else</li>
<li>變數賦值是一個等號<code>=</code>、真正的等於是兩個等號<code>==</code></li>
</ol>
</li>
<li>自己補充：之後還有一個全等於是三個等號<code>===</code><blockquote>
<p>作業說明：透過 if&#x2F;else 判斷使用者選取的選項，進而 alert 相對應的內容<br><a href="https://jsfiddle.net/iamCJ/9qmya12j/">https://jsfiddle.net/iamCJ/9qmya12j/</a></p>
</blockquote>
</li>
</ul>
<h2 id="第六課－認識資料型態與轉換"><a href="#第六課－認識資料型態與轉換" class="headerlink" title="第六課－認識資料型態與轉換"></a>第六課－認識資料型態與轉換</h2><ul>
<li>課程概要：<ol>
<li>認識<strong>數字</strong>資料型態<ol>
<li>數字可以做加減乘除運算</li>
<li>要分清楚資料型態是<strong>字串</strong>還是<strong>數字</strong>，雖然仍可做運算、不會報錯，但不鼓勵這樣混用，建議將資料轉型</li>
</ol>
</li>
<li>轉換資料型態<ol>
<li><strong>數值</strong>轉<strong>字串</strong>可以用<code>.toString()</code><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="string">&quot;100&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> b = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">let</span> c = a + b.<span class="title function_">toString</span>();</span><br></pre></td></tr></table></figure></li>
<li><strong>字串</strong>轉<strong>數值</strong>可以用<code>parseInt()</code><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a = <span class="string">&quot;100&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> b = <span class="number">100</span>;</span><br><span class="line"><span class="keyword">let</span> c = <span class="built_in">parseInt</span>(a) + b;</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li>我們在 JS 透過<code>getElementByXX</code>或<code>querySelector</code>抓取使用者在 html 輸入的內容（例如表單的 input），一律是<strong>字串</strong>型態，如果需要資料是數字型態、需要做數值運算的話，需要資料轉型</li>
</ol>
</li>
<li>作業心得：在做訂購數量的 input 時，學到了可以用<code>max=&quot;&quot;</code>、<code>min=&quot;&quot;</code>設最大最小值，甚至 type 是日期的也可以設定<blockquote>
<p>作業說明：抓取使用者填入的訂購數量，將資料轉型為數字後計算價錢，顯示於下面的表單<br><a href="https://jsfiddle.net/iamCJ/r3ogam4j/">https://jsfiddle.net/iamCJ/r3ogam4j/</a></p>
</blockquote>
</li>
</ul>
<h2 id="第七課－認識巢狀結構"><a href="#第七課－認識巢狀結構" class="headerlink" title="第七課－認識巢狀結構"></a>第七課－認識巢狀結構</h2><ul>
<li>課程概要：<ol>
<li>了解<strong>數字</strong>資料型態的比較：大於<code>&gt;</code>、小於<code>&lt;</code>、大於等於<code>&gt;=</code>、小於等於<code>&lt;=</code>、不等於<code>!=</code></li>
<li>認識<code>else if</code>：<ol>
<li>當<code>if</code>條件不成立時，會往下到<code>else if</code>條件判斷，如果仍不成立，才會到 else</li>
<li><code>else if</code>可以有多個，當前面的<code>else if</code>條件不成立時，才會接著往下一個<code>else if</code>判斷</li>
</ol>
</li>
<li>巢狀結構是什麼？<br>就是<code>if</code>裡面又包了一層<code>if</code>，可以再繼續包下去，不過不建議，程式會變得不易閱讀，可以在條件的部分多琢磨一點，例如使用 and<code>&amp;&amp;</code>、or<code>||</code>將條件串起來<figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="comment">//巢狀結構</span></span><br><span class="line"><span class="keyword">if</span> (a &gt; b) &#123;</span><br><span class="line">  <span class="keyword">if</span> (a &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a大於b，且大於100&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a大於b，且小於等於100&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (a &gt; <span class="number">100</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a小於等於b，但大於100&quot;</span>);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a小於等於b，且小於等於100&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//用 &amp;&amp; 修改條件</span></span><br><span class="line"><span class="keyword">if</span> (a &gt; b &amp;&amp; a &gt; <span class="number">100</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a大於b，且大於100&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (a &gt; b &amp;&amp; a &lt;= <span class="number">100</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a大於b，且小於等於100&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (a &lt;= b &amp;&amp; a &gt; <span class="number">100</span>) &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a小於等於b，但大於100&quot;</span>);</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a小於等於b，且小於等於100&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
</ol>
</li>
<li>作業心得：忘記<code>else if</code>的 else 跟 if 要分開，難怪 JSFiddle 一直報錯 XD<blockquote>
<p>作業說明：透過<code>if</code>、<code>else if</code>及<code>else</code>判斷使用者填寫表單的狀況，並依需要跳出 alert 提示<br><a href="https://jsfiddle.net/iamCJ/hrc9pv3g/">https://jsfiddle.net/iamCJ/hrc9pv3g/</a></p>
</blockquote>
</li>
</ul>
<h1 id="小結"><a href="#小結" class="headerlink" title="小結"></a>小結</h1><p>因為我本來就有些 JS 的基礎，所以這個系列的概念以及實作對我來說沒什麼問題，只是在要寫的功能越來越多時，對於切分功能、整理程式碼會有些苦惱，還有把樣式整理成能看的樣子花了好多時間 XD</p>
<h1 id="文章連結"><a href="#文章連結" class="headerlink" title="文章連結"></a>文章連結</h1><p><a href="https://codelove.tw/@howtomakeaturn/course/l3j5xk">自學網頁の嬰兒教材：JavaScript（一）—— 幫衣服工廠做個好用表單</a></p>
]]></content>
      <categories>
        <category>JavaScript</category>
      </categories>
      <tags>
        <tag>用嬰兒都學得會的教材學JS</tag>
      </tags>
  </entry>
  <entry>
    <title>【跟著大大一起從頭學Vue】Re Vue重頭說起：基礎模組化之筆記－1</title>
    <url>/%E3%80%90%E8%B7%9F%E8%91%97%E5%A4%A7%E5%A4%A7%E4%B8%80%E8%B5%B7%E5%BE%9E%E9%A0%AD%E5%AD%B8Vue%E3%80%91Re%20Vue%E9%87%8D%E9%A0%AD%E8%AA%AA%E8%B5%B7%EF%BC%9A%E5%9F%BA%E7%A4%8E%E6%A8%A1%E7%B5%84%E5%8C%96%E4%B9%8B%E7%AD%86%E8%A8%98%EF%BC%8D1/</url>
    <content><![CDATA[<h1 id="前言小廢話"><a href="#前言小廢話" class="headerlink" title="前言小廢話"></a>前言小廢話</h1><p>最近在觀看 Alex 大的 ReVue 系列影片從頭學 Vue，但發現如果沒有做筆記的話，很快就會對學過的東西印象模糊，加上 Alex 大的教學影片都長達一兩小時，要重新找影片來回憶也是有點困難又耗費時間，因此決定要做學習筆記並上傳於此以便日後查詢，不過我還算是初學者，並且所記下來的都是我主觀覺得需要注意的點，如果內容有誤、用詞不精準，或是寫得很廢根本不需要紀錄的部分就麻煩各位看官多多見諒了(｡･ω･｡)ﾉ<br><font style="font-size:15px;color:grey;">p.s.因為我是看到第一季的最後一集才突然意識到要做筆記，因此第一篇會直接從 Day 9 開始，更之前的會找時間補，但什麼時候會補完就隨緣了 ∠( ᐛ 」∠)＿</font></p>
<h1 id="本篇主題：基礎模組化"><a href="#本篇主題：基礎模組化" class="headerlink" title="本篇主題：基礎模組化"></a>本篇主題：基礎模組化</h1><h2 id="筆記"><a href="#筆記" class="headerlink" title="筆記"></a>筆記</h2><ul>
<li><p>為什麼要模組化？<br>1. 為了重複使用<br>2. 為了分類管理，將多個功能切割後每份模組只有單一功能</p>
</li>
<li><p>component 內需要有 template<br>template 放 HTML 的架構，可用雙引號<code>&quot;</code>、單引號<code>&#39;</code>、反引號<code>`</code>包住內容（推薦用反引號<code>`</code>）</p>
</li>
<li><p>component 內的 data <strong>必須</strong>是 function<br>因為物件是實體，會有可能指向到同一個物件上 → 變成沒有獨立的資料<br>因此要透過 function return object 確保每個 component 有自己的資料</p>
<figure class="highlight js"><figcaption><span>範例</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="title function_">component</span>(<span class="string">&quot;example-component&quot;</span>, &#123;</span><br><span class="line">  <span class="attr">data</span>: <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> &#123; <span class="attr">name</span>: <span class="string">&quot;CJ Wu&quot;</span> &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">template</span>: <span class="string">&quot;&lt;h1&gt;Hello! My name is &#123;&#123; name &#125;&#125;&lt;/h1&gt;&quot;</span>,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
</li>
<li><p>props 是什麼？<br>是一個將父（外）層 data 分享到內層的屬性（可以想成內層跟父層<strong>借</strong>data）<br>建議使用資料的方式是單向的，當作是跟人<strong>借用</strong>的，<strong>不可以</strong>在 component 內亂改資料，如果需要修改資料要通知父層(例如使用 listening)</p>
</li>
<li><p>slot 是什麼？<br>可以把它理解成插槽的意思，內層挖好一個空格讓父層放，讓父層決定內層內容</p>
</li>
<li><p>在 HTML 某些 tag 內使用模組需注意<br>像是<code>&lt;ol&gt;</code>、<code>&lt;ul&gt;</code>、<code>&lt;table&gt;</code>、<code>&lt;select&gt;</code>內部<strong>不能</strong>放自訂的 template tag，會出錯，他們內部已有規定好要放的 tag 了（<code>&lt;li&gt;</code>、<code>&lt;tr&gt;</code>、<code>&lt;option&gt;</code>）<br>⇒ 因此要改成放原本規定好的 tag，再加上<code>is</code>屬性</p>
<figure class="highlight html"><figcaption><span>範例</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span> <span class="attr">is</span>=<span class="string">&quot;example-component&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>component 用駝峰式命名須注意的地方<br>component 有兩種命名方式：駝峰式 ＆ dash 連接式(kebab-case)<br><strong>但是</strong>，駝峰式在 HTML 上<strong>無法被辨識</strong>（不認大小寫）<br>⇒ 因此要自行改成 dash 連接式，例如：<code>&quot;helloComponent&quot; → &lt;hello-compoment&gt;</code><br><font style="font-size:15px;color:grey;">p.s. 在 Vue cli 就不會有這樣的問題了</font></p>
</li>
<li><p>$emit 是什麼？<br>將在<em>Vue.component 內的值</em>打到父層</p>
<figure class="highlight js"><figcaption><span>範例</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="comment">//此處在Component內的template</span></span><br><span class="line"><span class="attr">template</span>:<span class="string">`&lt;button @click = &quot;$emit(&#x27;functionname&#x27;,value)&quot;&gt;&lt;/button&gt;`</span></span><br><span class="line"><span class="comment">//此處在HTML的component tag上，用method來接收值，並視需要寫入或修改父層的data</span></span><br><span class="line">&lt;hello-component @functionname=<span class="string">&quot;method&quot;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">//此段程式的意思是：當使用者點擊按鈕時，會觸發@click事件，傳遞值出去</span></span><br><span class="line"><span class="comment">//父層的部分用監聽該事件去接收傳出來的值，在new Vue內的methods寫function去處理收到的值</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>內層借資料（要用到多筆時），要選 <strong>傳物件&#x2F;陣列</strong> 還是 <strong>分別傳資料</strong> ？<br>用物件傳一整包資料雖然方便，但無法確保原始資料屬性會不會被改動，這樣會違反上面提到的 ── 單向使用的原則<br>⇒ 因此建議選擇<strong>分別傳多筆資料</strong>的方式<br><font style="font-size:15px;color:grey;">但若選擇用傳物件的方式，就要特別注意別出現<code>物件.資料屬性=&quot;change&quot;</code>，這樣會無法確認是內層還是父層改的資料</font></p>
</li>
</ul>
<hr>
<p>順便補上之前聽到的筆記</p>
<ul>
<li>要怎麼判斷 computed&#x2F;methods&#x2F;watch 內分別放什麼？<ul>
<li>computed 主要管理 <strong>資料</strong>產<strong>資料</strong></li>
<li>methods 主要管理 <strong>行為</strong></li>
<li>watch 主要管理 <strong>資料</strong>產<strong>行為&#x2F;事件</strong></li>
</ul>
</li>
</ul>
<h1 id="影片連結"><a href="#影片連結" class="headerlink" title="影片連結"></a>影片連結</h1><blockquote>
<p><a href="https://www.youtube.com/live/KQRfZ07bfAQ?feature=share">[ 想入門，我陪你 ] Re Vue 重頭說起｜ Day 9：基礎模組化</a></p>
</blockquote>
]]></content>
      <categories>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>跟著大大一起從頭學Vue</tag>
      </tags>
  </entry>
</search>
